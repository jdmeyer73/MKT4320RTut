[["forecasting.html", "Chapter 11 Forecasting 11.1 Introduction 11.2 tsplot User Defined Function 11.3 naivefc User Defined Function 11.4 linregfc User Defined Function 11.5 fccompare User Defined Function", " Chapter 11 Forecasting Data for this chapter: The msales.rdata and qsales.rdata are used. Load them now. # You may need to change the directory load(&quot;Data/msales.rdata&quot;) load(&quot;Data/qsales.rdata&quot;) 11.1 Introduction While Base R does have some time-series forecasting capabilities, there are several packages that make working with the data and running the analysis easier. For our class, we will be mainly using the fpp3 package inside of some user-defined functions. The user-defined functions are described briefly below, and then in detail in their own sections. tsplot.R produces a time series plot of the data naivefc.R analyzes the data using naive forecasting methods smoothfc.R analyzes the data using smoothing forecasting methods linregfc.R analyzes the data using regression-based forecasting methods fccompare.R compares models from saved results after running the methods functions 11.1.1 Packages You must have the following packages installed to use all of the user-defined functions. If you do not have them installed, you should do so now. fpp3 slider purrr dplyr ggplot2 # Load necessary packages library(fpp3) library(slider) library(purrr) library(ggplot2) library(dplyr) 11.2 tsplot User Defined Function Usage: tsplot(data, tvar=\"\", obs=\"\", datetype=c(\"ym\", \"yq\", \"yw\"), h= ) data is the name of the dataframe with the time variable and measure variable tvar is the variable that identifies the time period (in quotes) obs is the variable that identifies the measure (in quotes) datetype can be one of three options: \"ym\" if the time period is year-month \"yq\" if the time period is year-quarter \"yw\" if the time period is year-week h is an integer indicating the number of holdout/forecast periods Output: A time series plot source(&quot;tsplot.R&quot;) tsplot(msales, &quot;t&quot;, &quot;sales&quot;, &quot;ym&quot;, 12) tsplot(qsales, &quot;t&quot;, &quot;sales&quot;, &quot;yq&quot;, 8) 11.3 naivefc User Defined Function Usage: naivefc(data, tvar=\"\", obs=\"\", datetype=c(\"ym\", \"yq\", \"yw\"), h= ) data is the name of the dataframe with the time variable and measure variable tvar is the variable that identifies the time period (in quotes) obs is the variable that identifies the measure (in quotes) datetype can be one of three options: \"ym\" if the time period is year-month \"yq\" if the time period is year-quarter \"yw\" if the time period is year-week h is an integer indicating the number of holdout/forecast periods NOTE 1: The results of this function should be saved to an object. When doing so, the following objects are returned: $plot contains the naive methods plot $acc contains the accuracy measures $fcresplot contains a plot of the holdout period residuals $fcresid is a dataframe of the holdout period residuals (seldom used separately) Note 2: The model names are: Naive for the naive model Naive.Drift for the naive model with drift Seas.Naive for the seasonal naive model Seas.Naive.Drift for the seasonal naive model with drift source(&quot;naivefc.R&quot;) naive &lt;- naivefc(msales, &quot;t&quot;, &quot;sales&quot;, &quot;ym&quot;, 12) naive$plot naive$acc Model RMSE MAE MAPE 1 Naive 323.496 263.917 0.945 2 Naive.Drift 253.103 185.868 0.665 3 Seas.Naive 133.710 127.417 0.459 4 Seas.Naive.Drift 45.769 41.417 0.149 naive$fcresplot ## smoothfc User Defined Function Usage: smoothfc(data, tvar=\"\", obs=\"\", datetype=c(\"ym\", \"yq\", \"yw\"), h= ) data is the name of the dataframe with the time variable and measure variable tvar is the variable that identifies the time period (in quotes) obs is the variable that identifies the measure (in quotes) datetype can be one of three options: \"ym\" if the time period is year-month \"yq\" if the time period is year-quarter \"yw\" if the time period is year-week h is an integer indicating the number of holdout/forecast periods NOTE 1: The results of this function should be saved to an object. When doing so, the following objects are returned: $plot contains the smoothing methods plot $acc contains the accuracy measures $fcresplot contains a plot of the holdout period residuals $fcresid is a dataframe of the holdout period residuals (seldom used separately) Note 2: The model names are: Mov.Ave for the moving average model Exp.Smooth for the exponential smoothing model H-W.Add for the Holt-Winters Additive model H-W.Mult for Hold-Winters Multiplicative model source(&quot;smoothfc.R&quot;) smooth &lt;- smoothfc(msales, &quot;t&quot;, &quot;sales&quot;, &quot;ym&quot;, 12) smooth$plot smooth$acc Model RMSE MAE MAPE 1 Exp.Smooth 323.495 263.915 0.945 2 H-W.Add 54.469 46.754 0.168 3 H-W.Mult 43.857 40.626 0.146 4 Mov.Ave 225.685 191.245 0.686 smooth$fcresplot 11.4 linregfc User Defined Function Usage: linregfc(data, tvar=\"\", obs=\"\", datetype=c(\"ym\", \"yq\", \"yw\"), h= ) data is the name of the dataframe with the time variable and measure variable tvar is the variable that identifies the time period (in quotes) obs is the variable that identifies the measure (in quotes) datetype can be one of three options: \"ym\" if the time period is year-month \"yq\" if the time period is year-quarter \"yw\" if the time period is year-week h is an integer indicating the number of holdout/forecast periods NOTE 1: The results of this function should be saved to an object. When doing so, the following objects are returned: $plot contains the regression methods plot $acc contains the accuracy measures $fcresplot contains a plot of the holdout period residuals $fcresid is a dataframe of the holdout period residuals (seldom used separately) Note 2: The model names are: Lin.Reg.Trend for the linear regression with trend model Line.Reg.Seas.Trend for linear regression with trend and seasonlity model source(&quot;linregfc.R&quot;) linreg &lt;- linregfc(msales, &quot;t&quot;, &quot;sales&quot;, &quot;ym&quot;, 12) linreg$plot linreg$acc Model RMSE MAE MAPE 1 Lin.Reg.Seas.Trend 55.212 47.898 0.172 2 Lin.Reg.Trend 199.198 168.985 0.607 linreg$fcresplot 11.5 fccompare User Defined Function Usage: fccompare(results, models) results is a list of the stored methods results; create the list with the list function, such as:results &lt;- list(naive, smooth, linreg) models is a vector of the models you want to compare; create the vector with the c() function, such as:models &lt;- c(\"Naive\", \"Mov.Ave\", \"Lin.Reg.Trend\") NOTE 1: The function returns two items that will be directly displayed or can be saved to an object: $acc contains the accuracy measures $fcresplot contains a plot of the holdout period residuals source(&quot;fccompare.R&quot;) results &lt;- list(naive, smooth, linreg) models &lt;- c(&quot;Naive&quot;, &quot;Mov.Ave&quot;, &quot;Lin.Reg.Trend&quot;) fccompare(results, models) $acc Model RMSE MAE MAPE 1 Naive 323.496 263.917 0.945 8 Mov.Ave 225.685 191.245 0.686 10 Lin.Reg.Trend 199.198 168.985 0.607 $fcresplot "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
