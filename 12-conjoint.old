```{r echo=FALSE, message=FALSE}
library(dplyr)
library(ggplot2)
```

# Conjoint Analysis (Not Covered)

Data for this chapter:

* The `airlineca` data is used from the `MKT4320BGSU` course package. Load the package and use the `data()` function to load the data.
    ```{r t12loaddata}
    # Load the course package
    library(MKT4320BGSU)
    # Load the data
    data(airlineca)
    ```

## Introduction

Base R does not have any built in function to handle conjoint analysis, because conjoint analysis can be done in a variety of ways.  For this tutorial, the focus is on traditional conjoint using linear regression based methods. To accomplish the conjoint analysis, I have written a three user defined functions to help with getting the necessary results for traditional conjoint.

* `tradca` produces overal part-worth plots for each attribute, and importance plot, and a table with case-level part-worths and importances
* `cademo` produces correlation matrices and importance regressions from a dataframe of case-level part-worths/importances that has been appended with demographics
* `capred.` compares two profiles specified by the user

## `tradca` User Defined Function

* Usage: `tradca(formula, data, idvar="")`
    * `formula` is an object with a saved formula.  The formula is represented by a DV on the left side separated from the IVs on the right side by a tilde(`~`). For traditional conjoint, the DV is the value rating for each profile, while the IVs are the name of the attribute variables.  For example:
        * `caform = value ~ attr1 + attr2 + attr3`
    * `data` is the name of the dataframe with the value ratings for each profile
    * `idvar` is the variable that identifies the case (in quotes)
* When saved to an object, this function will return three things:
    * `pwplot` contains a plot with average part-worth values for each attribute
    * `impplot` contains a plot with the average importances
    * `casetable` contains a dataframe with the part-worths and importances for each case
* NOTE: This function requires the following packages:
    * `broom`
    * `dplyr`
    * `stringr`
    * `ggplot2`

``` {r}
# Load necessary packages
library(broom)
library(dplyr)
library(stringr)
library(ggplot2)

# Saving formula to object
caform <- value ~ airline + connect + price

# Using fucntion and saving to object called 'results'
results <- tradca(formula = caform,  # Formula object created above
                  data = airlineca,  # Data frame with profile ratings
                  idvar="caseid")    # Case id variable

results$pwplot   # Get part worth plot
results$impplot  # Get importance plot
```

## `cademo` User Defined Function

* Usage: `cademo(formula, data, vars="")`
    * `formula` is the saved formula object from before
    * `data` is the name of the dataframe with case-level part-worths and importances, along with the appended demographic variables (see Preparation below)
    * `vars` is a list of the demographic variable names
* When run, this function will return correlation matrices and importance regressions depending on the type of demographic variable
* NOTE: This function requires the `Hmisc` package

### Preparation

* To use this function, the `casetable` from the call to the `tradca` function must be appended with the demographic variables for each case.  To do this, use the following code: 

``` {r}
demos <- airlineca %>%   # Create new dataframe called 'demos' based on original data
   group_by(caseid) %>%      # Group by the 'idvar'
   summarise(inc=first(inc),    # Capture the demographic variables
             type=first(type)) %>% 
   bind_cols(.,results$casetable[,2:ncol(results$casetable)])  

# NOTE:  This last command appends the demographic variables 'casetable' dataframe 
```

### Function usage

```{r}
cademo(caform,  # Formula object from before
       demos,   # Dataframe created above
       c("inc", "type"))  # Names of the demographic variables
```

## `capred` User Defined Function

* Usage: `cademo(formula, data, prof1, prof2)`
    * `formula` is the saved formula object from before
    * `data` is the name of the dataframe with case-level part-worths and importances; this is the `casetable` object from the original call to the `tradca` function
    * `prof1` is the first profile (see Preparation below)
    * `prof2` is the second profile (see Preparation below)
* When run, this function will return correlation matrices and importance regressions depending on the type of demographic variable

### Preparation

* To use this function, it works best to create the profiles by saving them to separate objects. The attribute levels for the profiles should be in the form of: `attribute_levelnumber`.
    * For example, for the first *Delta* is the first level of the `airline` attribute, so we would use `airline_1` to indicate that level of that attribute
    
``` {r}
# Create first profile
prof1 <- c("airline_1", "connect_2", "price_3")
# Create second profile
prof2 <- c("airline_3", "connect_2", "price_2")
```

### Function usage

```{r}
capred(caform,  # Formula object from before
       results$casetable,   # Dataframe from original 'tradca' call
       prof1, prof2)  # Names of our profile objects
```